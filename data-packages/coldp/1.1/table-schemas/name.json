{
  "identifier": "http://rs.gbif.org/data-packages/coldp/name",
  "name": "name",
  "title": "Name",
  "url": "http://rs.gbif.org/data-packages/coldp/1.1/table-schemas/name.json",
  "description": "Names can be shared in a structured way using various fields, but rank, scientificName and authorship alone are sufficient. See for examples and rationales. A structured scientificName can be given using the following fields:",
  "fields": [
    {
      "name": "ID",
      "type": "string",
      "format": "default",
      "title": "ID",
      "description": "Unique name identifier that is referred to elsewhere via nameID.",
      "constraints": {
        "unique": true,
        "required": true
      }
    },
    {
      "name": "alternativeID",
      "type": "string",
      "format": "default",
      "title": "alternativeID",
      "description": "A comma concatenated list of alternative identifiers for the name. Every alternative identifier must be a URI/URN/URL or given in the form of scope:id. See identifiers for all details and common scopes."
    },
    {
      "name": "sourceID",
      "type": "string",
      "format": "default",
      "title": "sourceID",
      "description": "Optional identifier for the source this record came from as listed in the metadata.yaml"
    },
    {
      "name": "basionymID",
      "type": "string",
      "format": "default",
      "title": "basionymID",
      "description": "Identifier of the name which is the original combination of this name. Also known as the basionym. Contrary to the strict basionym definition it is acceptable to populate this field also for original names which should point to itself. A basionym is a terminal relationship which cannot be \"chained\". The original name itself should not have another basionym relation to another name. When the basionym was established as a nomen novum to replace another name, e.g. a homonym, it should not use basionymID to refer to the replaced name (which has an entirely different epithet), but use the NameRelation with type=replacement name instead. Note there is an alternative way to share the information about an original name by using a NameRelation with type=basionym. The field basionymID exists for simplicity and because it is an important information to be shared."
    },
    {
      "name": "scientificName",
      "type": "string",
      "format": "default",
      "title": "scientificName",
      "description": "Required scientific name excluding the authorship",
      "constraints": {
        "required": true
      }
    },
    {
      "name": "authorship",
      "type": "string",
      "format": "default",
      "title": "authorship",
      "description": "Authorship of the scientificName"
    },
    {
      "name": "rank",
      "type": "string",
      "format": "default",
      "title": "rank",
      "description": "The rank of the name preferably given in case insensitive english. The recommended vocabulary is included in rank_enum.",
      "constraints": {
        "enum": [
          "superdomain",
          "domain",
          "subdomain",
          "infradomain",
          "empire",
          "realm",
          "subrealm",
          "superkingdom",
          "kingdom",
          "subkingdom",
          "infrakingdom",
          "superphylum",
          "phylum",
          "subphylum",
          "infraphylum",
          "parvphylum",
          "microphylum",
          "nanophylum",
          "claudius",
          "gigaclass",
          "megaclass",
          "superclass",
          "class",
          "subclass",
          "infraclass",
          "subterclass",
          "parvclass",
          "superdivision",
          "division",
          "subdivision",
          "infradivision",
          "superlegion",
          "legion",
          "sublegion",
          "infralegion",
          "megacohort",
          "supercohort",
          "cohort",
          "subcohort",
          "infracohort",
          "gigaorder",
          "magnorder",
          "grandorder",
          "mirorder",
          "superorder",
          "order",
          "nanorder",
          "hypoorder",
          "minorder",
          "suborder",
          "infraorder",
          "parvorder",
          "supersection zoology",
          "section zoology",
          "subsection zoology",
          "falanx",
          "gigafamily",
          "megafamily",
          "grandfamily",
          "superfamily",
          "epifamily",
          "family",
          "subfamily",
          "infrafamily",
          "supertribe",
          "tribe",
          "subtribe",
          "infratribe",
          "suprageneric name",
          "supergenus",
          "genus",
          "subgenus",
          "infragenus",
          "supersection botany",
          "section botany",
          "subsection botany",
          "superseries",
          "series",
          "subseries",
          "infrageneric name",
          "species aggregate",
          "species",
          "infraspecific name",
          "grex",
          "klepton",
          "subspecies",
          "cultivar group",
          "convariety",
          "infrasubspecific name",
          "proles",
          "natio",
          "aberration",
          "morph",
          "supervariety",
          "variety",
          "subvariety",
          "superform",
          "form",
          "subform",
          "pathovar",
          "biovar",
          "chemovar",
          "morphovar",
          "phagovar",
          "serovar",
          "chemoform",
          "forma specialis",
          "lusus",
          "cultivar",
          "mutatio",
          "strain",
          "other",
          "unranked"
        ]
      }
    },
    {
      "name": "uninomial",
      "type": "string",
      "format": "default",
      "title": "uninomial",
      "description": "The single-word name of generic or higher rank names."
    },
    {
      "name": "genus",
      "type": "string",
      "format": "default",
      "title": "genus",
      "description": "The genus part of a bi/trinomial. Note that for generic names the uninomial field should be used, not genus!"
    },
    {
      "name": "infragenericEpithet",
      "type": "string",
      "format": "default",
      "title": "infragenericEpithet",
      "description": "The infrageneric epithet. Used as the terminal epithet for names at infrageneric ranks and optionally also for bi/trinomials In zoological names often the subgenus."
    },
    {
      "name": "specificEpithet",
      "type": "string",
      "format": "default",
      "title": "specificEpithet",
      "description": "The specific epithet in case of bi/trinomials."
    },
    {
      "name": "infraspecificEpithet",
      "type": "string",
      "format": "default",
      "title": "infraspecificEpithet",
      "description": "The infraspecific epithet in case of bi/trinomials."
    },
    {
      "name": "cultivarEpithet",
      "type": "string",
      "format": "default",
      "title": "cultivarEpithet",
      "description": "The name of the cultivar for name governed by the cultivar code."
    },
    {
      "name": "notho",
      "type": "string",
      "format": "default",
      "title": "notho",
      "description": "For named hybrids the part of the name which is considered a hybrid and which usually is prefixed with the hybrid marker Ã—. One of:"
    },
    {
      "name": "originalSpelling",
      "type": "string",
      "format": "default",
      "title": "originalSpelling",
      "description": "Flag indicating that the name is given in it's original spelling when an emendation exists. Only use the flag if there is a known correction existing. The originalSpelling is usually indicated by placing [sic] after the name. A originalSpelling=false flag instead is indicating that the name is a corrected spelling, usually indicated by placing corrig. after the name. In most cases when it is unknown or the original spelling was never revised leave this flag empty."
    },
    {
      "name": "combinationAuthorship",
      "type": "string",
      "format": "default",
      "title": "combinationAuthorship",
      "description": "The authorteam of the main authorship for the exact combination (not the original combination). Multiple authors should be concatenated with a pipe | symbol."
    },
    {
      "name": "combinationAuthorshipID",
      "type": "string",
      "format": "default",
      "title": "combinationAuthorshipID",
      "description": "A list of identifiers for authors of the exact combination (not the original combination). Multiple author identifiers should be concatenated with a pipe | symbol. If combinationAuthorship is given, the order and number of author names and identifiers must always match up. Author identifiers must refer to an existing Author.ID within this data package."
    },
    {
      "name": "combinationExAuthorship",
      "type": "string",
      "format": "default",
      "title": "combinationExAuthorship",
      "description": "The ex-authors part of the main authorship for the very combination (not the original combination). The ex prefix as normally found in the authorship should not be included here. Multiple authors should be concatenated with a pipe | symbol."
    },
    {
      "name": "combinationExAuthorshipID",
      "type": "string",
      "format": "default",
      "title": "combinationExAuthorshipID",
      "description": "A list of identifiers for ex-authors of the exact combination (not the original combination). Multiple author identifiers should be concatenated with a pipe | symbol. If combinationExAuthorship is given, the order and number of author names and identifiers must always match up. Author identifiers must refer to an existing Author.ID within this data package."
    },
    {
      "name": "combinationAuthorshipYear",
      "type": "string",
      "format": "default",
      "title": "combinationAuthorshipYear",
      "description": "The year given in the authorship for the very combination (not the original combination), given without brackets."
    },
    {
      "name": "basionymAuthorship",
      "type": "string",
      "format": "default",
      "title": "basionymAuthorship",
      "description": "The authorteam of the original name normally found in brackets, but given here without brackets. Multiple authors should be concatenated with a pipe | symbol."
    },
    {
      "name": "basionymAuthorshipID",
      "type": "string",
      "format": "default",
      "title": "basionymAuthorshipID",
      "description": "A list of identifiers for authors of the original combination (basionym) normally found in brackets. Multiple author identifiers should be concatenated with a pipe | symbol. If basionymAuthorship is given, the order and number of author names and identifiers must always match up. Author identifiers must refer to an existing Author.ID within this data package."
    },
    {
      "name": "basionymExAuthorship",
      "type": "string",
      "format": "default",
      "title": "basionymExAuthorship",
      "description": "The ex-authors of the original name normally found in brackets, but given here without brackets. The ex prefix as normally found in the authorship should not be included here. Multiple authors should be concatenated with a pipe | symbol."
    },
    {
      "name": "basionymExAuthorshipID",
      "type": "string",
      "format": "default",
      "title": "basionymExAuthorshipID",
      "description": "A list of identifiers for ex-authors of the original combination (basionym) normally found in brackets. Multiple author identifiers should be concatenated with a pipe | symbol. If basionymExAuthorship is given, the order and number of author names and identifiers must always match up. Author identifiers must refer to an existing Author.ID within this data package."
    },
    {
      "name": "basionymAuthorshipYear",
      "type": "string",
      "format": "default",
      "title": "basionymAuthorshipYear",
      "description": "The year given in the authorship for the original combination normally found in brackets, but given here without brackets."
    },
    {
      "name": "code",
      "type": "string",
      "format": "default",
      "title": "code",
      "description": "The nomenclatural code the name falls under.",
      "constraints": {
        "enum": [
          "bacterial",
          "botanical",
          "cultivars",
          "phyto",
          "virus",
          "zoological",
          "phylo"
        ]
      }
    },
    {
      "name": "status",
      "type": "string",
      "format": "default",
      "title": "status",
      "description": "The broad nomenclatural status of the name. For the exact status note, e.g. nomen nudum, the remarks field should additionally be used Alternatively a URI or simple name from a class of the NOMEN ontology can be used.",
      "constraints": {
        "enum": [
          "established",
          "not established",
          "acceptable",
          "unacceptable",
          "conserved",
          "rejected",
          "doubtful",
          "manuscript",
          "chresonym"
        ]
      }
    },
    {
      "name": "referenceID",
      "type": "string",
      "format": "default",
      "title": "referenceID",
      "description": "A pointer to a Reference that is the publication in which the scientificName was originally established under the rules of the associated nomenclatural code."
    },
    {
      "name": "publishedInYear",
      "type": "year",
      "format": "default",
      "title": "publishedInYear",
      "description": "The effective year the name was published, given as a 4 digit integer. It is the year that is nomenclaturally relevant for the given combination. In most cases this will be the same as the publication year given in the linked reference record via referenceID. But in some cases this might be different."
    },
    {
      "name": "publishedInPage",
      "type": "string",
      "format": "default",
      "title": "publishedInPage",
      "description": "The exact single page number where the name was published. If the description spans multiple pages, the first page should be given."
    },
    {
      "name": "publishedInPageLink",
      "type": "string",
      "format": "default",
      "title": "publishedInPageLink",
      "description": "A URL to the exact page where the name was published. If the description spans multiple pages, the link to the first page should be given."
    },
    {
      "name": "gender",
      "type": "string",
      "format": "default",
      "title": "gender",
      "description": "Gender of the name, i.e. the genus in case of bi/trinomials. Values for the gender field should be one of masculine, feminine or neuter."
    },
    {
      "name": "genderAgreement",
      "type": "boolean",
      "format": "default",
      "title": "genderAgreement",
      "description": "Flag that indicates for bi/trinomials whether the (infra)species epithet must follow and agree with the gender of the genus."
    },
    {
      "name": "etymology",
      "type": "string",
      "format": "default",
      "title": "etymology",
      "description": "Etymology of the name, i.e. the origin or meaning of the words forming the scientific name. Should be a short human readable paragraph."
    },
    {
      "name": "link",
      "type": "string",
      "format": "uri",
      "title": "link",
      "description": "A link to a webpage provided by the source depicting the name."
    },
    {
      "name": "remarks",
      "type": "string",
      "format": "default",
      "title": "remarks",
      "description": "Additional nomenclatural remarks about the name. Often indicating its status or relevant rules in the code."
    },
    {
      "name": "modified",
      "type": "date",
      "format": "default",
      "title": "modified",
      "description": "UTC timestamp in ISO format to represent the time the record was last modified."
    },
    {
      "name": "modifiedBy",
      "type": "string",
      "format": "default",
      "title": "modifiedBy",
      "description": "Author identifier indicating the person who has last modified the record."
    }
  ],
  "primaryKey": "ID",
  "foreignKeys": [
    {
      "fields": "basionymID",
      "reference": {
        "resource": "name",
        "fields": "ID"
      }
    },
    {
      "fields": "referenceID",
      "reference": {
        "resource": "reference",
        "fields": "ID"
      }
    }
  ]
}
